staging_gitlab_values:
  global:
    hosts:
      domain: "{{ commonname | replace('*.', '') }}"
    edition: ce
    ingress:
      enabled: true
      provider: traefik
      class: traefik-external
      annotations: 
        kubernetes.io/tls-acme: true
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      configureCertmanager: false

  certmanager:
    install: false
  certmanager-issuer:
    email: "{{ cf_email }}"
  nginx-ingress:
    enabled: false
  postgresql:
    image:
      tag: 13.6.0
  persistence:
    enabled: true
    gitaly:
      enabled: true
      storageClassName: my-gitaly-storage
      
  # CUSTOM - Required for separately managed certmanager
  registry:
    ingress:
      tls:
        secretName: "{{ staging_secret }}"
  minio:
    ingress:
      tls:
        secretName: "{{ staging_secret }}"
  gitlab:
    migrations:
      initialRootPassword:
        key: "admin"
    gitlab-pages:
      ingress:
        tls:
          secretName: "{{ staging_secret }}"
    webservice:
      ingress:
        path: 
        tls:
          secretName: "{{ staging_secret }}"
    toolbox:
      replicas: 1
      antiAffinityLabels:
        matchLabels:
          app: 'gitaly'

production_gitlab_values:
  global:
    hosts:
      domain: "{{ public_domain }}"
    edition: ce
    ingress:
      enabled: true
      provider: traefik
      class: traefik-external
      annotations: 
        kubernetes.io/tls-acme: true
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      configureCertmanager: false
  certmanager:
    install: false
  certmanager-issuer:
    email: "{{ cf_email }}"
  nginx-ingress:
    enabled: false
  postgresql:
    image:
      tag: 13.6.0
  persistence:
    enabled: true
    gitaly:
      enabled: true
      storageClassName: my-gitaly-storage
      
  # CUSTOM - Required for separately managed certmanager
  registry:
    ingress:
      tls:
        secretName: "gitlab-{{ root_domain_secret }}-tls"
  minio:
    ingress:
      tls:
        secretName: "gitlab-{{ root_domain_secret }}-tls"
  gitlab:
    migrations:
      initialRootPassword:
        key: "admin"
    gitlab-pages:
      ingress:
        tls:
          secretName: "gitlab-{{ root_domain_secret }}-tls"
    webservice:
      ingress:
        path: 
        tls:
          secretName: "gitlab-{{ root_domain_secret }}-tls"
    toolbox:
      replicas: 1
      antiAffinityLabels:
        matchLabels:
          app: 'gitaly'