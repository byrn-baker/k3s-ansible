---
# ansible-playbook install-gitlab.yml --tags "staging-install"
# ansible-playbook install-gitlab.yml --tags "production-install"
- name: Install Gitlab on k3s
  hosts: localhost
  roles:
    - install-gitlab

- hosts: localhost
  gather_facts: no
  
  tasks:
  - block:
    - name: Get public IP
      uri:
        url: https://api.ipify.org
        return_content: yes
      register: public_ip
    - debug:
        var: public_ip.content

    - name: Add DNS entries for Gitlab services
      community.general.cloudflare_dns:
        zone: "{{ public_domain }}"
        record: "{{ item }}"
        type: A
        value: "{{ public_ip.content }}"
        proxied: yes
        api_token: "{{ cf_token }}"
      loop:
        - "gitlab.{{ public_domain }}"
        - "minio.{{ public_domain }}"
        - "registry.{{ public_domain }}"
        - "kas.{{ public_domain }}"

    - name: Deploy Gitlab Runner
      hosts: localhost
      tasks:
        - name: Apply Gitlab Runner Deployment
          k8s:
            state: present
            definition:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                annotations:
                  deployment.kubernetes.io/revision: '1'
                generation: 1
                labels:
                  workload.user.cattle.io/workloadselector: "apps.deployment-gitlab-gitlab-{{ root_domain_secret }}-runner-01"
                name: "gitlab-{{ root_domain_secret }}-runner-01"
                namespace: gitlab
              spec:
                progressDeadlineSeconds: 600
                replicas: 1
                revisionHistoryLimit: 10
                selector:
                  matchLabels:
                    workload.user.cattle.io/workloadselector: "apps.deployment-gitlab-gitlab-{{ root_domain_secret }}-runner-01"
                strategy:
                  rollingUpdate:
                    maxSurge: 25%
                    maxUnavailable: 25%
                  type: RollingUpdate
                template:
                  metadata:
                    creationTimestamp: null
                    labels:
                      workload.user.cattle.io/workloadselector: "apps.deployment-gitlab-gitlab-{{ root_domain_secret }}-runner-01"
                    namespace: default
                  spec:
                    affinity: {}
                    containers:
                      - image: gitlab/gitlab-runner
                        imagePullPolicy: Always
                        name: "gitlab-{{ root_domain_secret }}-runner-01"
                        resources: {}
                        securityContext:
                          allowPrivilegeEscalation: false
                          privileged: false
                          readOnlyRootFilesystem: false
                          runAsNonRoot: false
                        terminationMessagePath: /dev/termination-log
    tags: production-install